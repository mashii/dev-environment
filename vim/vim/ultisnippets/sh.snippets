snippet #! "#!/bin/bash"
#!/bin/bash

endsnippet

snippet if "if ..."
if [[ ${1:condition} ]]; then
    ${2:echo do_something_here}
fi
endsnippet


snippet ifel "if ... else ..."
if [[ ${1:condition} ]]; then
    ${2:echo do_something_here}
else
    ${3:echo do_something_here}
fi
endsnippet


snippet case "case ... when ... when ... default" b
case ${1:condition} in
${2:cond1})
    ${3:echo cond1}
    ;;
${4:cond2})
    ${5:echo cond2}
    ;;
*)
    ${6:echo default}
    ;;
esac
endsnippet

snippet cond "case cond" b
${2:cond})
    echo cond
    ;;
endsnippet


snippet elif "elif ..."
elif [[ ${1:condition} ]]; then
    ${3:echo do_something_here}
endsnippet


snippet while "while ..."
while [[ ${1:condition} ]]; do
    ${2:echo do_something_here}
done
endsnippet


snippet for "for ..."
for ${1:it} in ${2:range}; do
    ${3:echo do_something_here}
done
endsnippet


snippet fori "for ((i=0; i<n; i++))"
for ((i=${1:0}; i<${2:10}; i++)); do
    echo ${i}
done
endsnippet


snippet go_script_dir "go script directory"
script_file=\${0}
current_dir=$(pwd)
script_abs_path=${current_dir}/${script_file}
script_dir=$(dirname ${script_abs_path})
cd ${script_dir}
endsnippet


snippet randstr "random string generator"
function randstr()
{
    length=\${1:-15}
    characters=\${2:-'[0-9a-zA-Z!@#^_]'}
    strings /dev/urandom | grep -o ${characters} | head -n ${length} | tr -d '\n';
}
endsnippet


snippet func "function ..."
function ${1:func}()
{
    ${2:echo do_something_here}
}
endsnippet


snippet logger "logger..." b
log_min_level=2

log_core() {
    # log level:
    #     0 trace
    #     1 debug
    #     2 info
    #     3 warn(ing)
    #     4 error
    #     5 fatal
    FLG=("TRACE" "DEBUG" "INFO " "WARN " "ERROR" "FATAL")
    level=\$1
    flg=\${FLG["\$level"]}
    shift 1
    msg="\$*"
    if [ \$level -ge $log_min_level ];
    then
        echo `date +"%F %T.%N"`" [\${flg}] \${msg}"
    fi
}

log_fatal() {
    log_core 5 "\$*"
}

log_error() {
    log_core 4 "\$*"
}

log_warn() {
    log_core 3 "\$*"
}

log_info() {
    log_core 2 "\$*"
}

log_debug() {
    log_core 1 "\$*"
}
endsnippet


snippet readfile "read file line-by-line..."
while read line; do
    ${2:echo ${line}}
done < ${1:file}
endsnippet


snippet readfilebyitem "read file item-by-item ..."
for item in $(<${1:file}); do
    ${2:echo ${item}}
done
endsnippet


# vim:ft=snippets:
